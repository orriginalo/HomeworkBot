"""empty message

Revision ID: d65449361067
Revises:
Create Date: 2025-02-13 14:54:09.347418

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d65449361067"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("media")
    op.drop_table("groups")
    op.drop_table("settings")
    op.drop_table("subjects")
    op.drop_table("schedule")
    op.drop_table("homeworks")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "homeworks",
        sa.Column("uid", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("from_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("subject", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("task", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("to_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("group_uid", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('UTC-4'::text, CURRENT_TIMESTAMP)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("user_uid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["group_uid"], ["groups.uid"], name="homeworks_group_uid_fkey"),
        sa.ForeignKeyConstraint(["user_uid"], ["users.uid"], name="homeworks_user_uid_fkey"),
        sa.PrimaryKeyConstraint("uid", name="homeworks_pkey"),
    )
    op.create_table(
        "schedule",
        sa.Column("uid", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("subject", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("teacher", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("cabinet", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("group_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("week_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("uid", name="schedule_pkey"),
    )
    op.create_table(
        "subjects",
        sa.Column("uid", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("uid", name="subjects_pkey"),
        sa.UniqueConstraint("name", name="subjects_name_key"),
    )
    op.create_table(
        "settings",
        sa.Column("uid", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("key", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("value", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("uid", name="settings_pkey"),
    )
    op.create_table(
        "groups",
        sa.Column(
            "uid",
            sa.INTEGER(),
            server_default=sa.text("nextval('groups_uid_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("course", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("ref_code", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_equipped", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("leader_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("member_count", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('UTC-4'::text, CURRENT_TIMESTAMP)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('UTC-4'::text, CURRENT_TIMESTAMP)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("subjects", postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("uid", name="groups_pkey"),
        sa.UniqueConstraint("ref_code", name="groups_ref_code_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "media",
        sa.Column("uid", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("homework_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("media_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("media_type", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("uid", name="media_pkey"),
    )
    op.create_table(
        "users",
        sa.Column("uid", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("tg_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("role", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("firstname", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("lastname", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("settings", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('UTC-4'::text, CURRENT_TIMESTAMP)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('UTC-4'::text, CURRENT_TIMESTAMP)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("moved_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("group_uid", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_leader", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["group_uid"], ["groups.uid"], name="users_group_uid_fkey"),
        sa.PrimaryKeyConstraint("uid", name="users_pkey"),
        sa.UniqueConstraint("tg_id", name="users_tg_id_key"),
    )
    # ### end Alembic commands ###
